{"version":3,"sources":["assets/images/1.jpg","assets/images/2.jpg","assets/images/3.jpg","assets/images/4.jpg","theme/index.js","TodoApp/Navbar/ProgressBar/index.js","TodoApp/Navbar/StatusTabs/index.js","TodoApp/Navbar/index.js","TodoApp/TodoForm/index.js","TodoApp/TodoList/TodoItem/index.js","TodoApp/TodoList/index.js","TodoApp/GreetingBlock/index.js","constants/index.js","TodoApp/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","size","space","fontSizes","palette","elemSize","device","mobileS","concat","mobileM","mobileL","tablet","tabletL","laptop","laptopL","desktop","desktopL","Container","styled","div","_templateObject","Wrapper","_templateObject2","Progress","_templateObject3","props","width","ProgressBar","percent","react_default","a","createElement","data-testid","StatusTabs_templateObject","StyledButton","button","StatusTabs_templateObject2","active","StatusTabs","handleClickMenu","StatusTabs_Container","onClick","defaultProps","Header","header","Navbar_templateObject","LeftWrapper","Navbar_templateObject2","Navbar","title","href","Navbar_ProgressBar","Navbar_StatusTabs","Input","input","TodoForm_templateObject","TodoForm","handleAddTask","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onSubmit","e","preventDefault","placeholder","onChange","target","autoFocus","propsType","PropTypes","func","li","TodoItem_templateObject","Body","TodoItem_templateObject2","TitleInput","TodoItem_templateObject3","Title","_templateObject4","StatusText","_templateObject5","color","TodoItem","showInput","setShowInput","id","isFinished","imgURL","handleRemoveTodo","handleToggleTodo","handleChangeTitle","statusText","renderTitle","onBlur","onKeyDown","key","TodoItem_Container","src","alt","checked","type","TodoList_templateObject","TodoList","todos","itemList","map","todo","TodoList_TodoItem","TodoList_Container","length","Fragment","GreetingBlock_templateObject","GreetingBlock","remainingTodos","GreetingBlock_Container","images","image1","image2","image3","image4","BodyWrapper","TodoApp_templateObject","Box","TodoApp_templateObject2","TodoApp","defaultTodos","setTodos","_useState3","_useState4","currentMenu","setCurrentMenu","filterTodos","filter","getFilteredTodo","arguments","undefined","reduce","sum","getProgressPercentage","TodoApp_Navbar","TodoApp_GreetingBlock","TodoApp_TodoForm","imageNum","Math","floor","random","prevTodos","toConsumableArray","TodoApp_TodoList","objectSpread","Boolean","window","location","hostname","match","ReactDOM","render","src_TodoApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d1adffcf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.dc711c6f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.f7833b4d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.869c31fa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.53ec54ee.jpg\";","const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  tabletL: '900px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n}\n\nexport const space = {\n  xxxs: '1px',\n  xxs: '2px',\n  xs: '5px',\n  sm: '10px',\n  md: '15px',\n  lg: '20px',\n  xl: '25px',\n  xxl: '30px',\n  xxxl: '50px',\n}\n\nexport const fontSizes = {\n  xxxxs: '0.625rem', // 10 px\n  xxxs: '0.75rem', // 12 px\n  xxs: '0.8125rem', // 13 px\n  xs: '0.875rem', // 14 px\n  sm: '0.9375rem', // 15 px\n  md: '1rem', // 16 px\n  lg: '1.125rem', // 18 px\n  xl: '1.25rem', // 20 px\n  xxl: '1.5rem', // 24 px\n  xxxl: '2.25rem', // 36 px\n}\n\nexport const palette = {\n  grey90: 'rgba(0, 0, 0, 0.9)',\n  grey80: 'rgba(0, 0, 0, 0.8)',\n  grey50: 'rgba(0, 0, 0, 0.5)',\n  grey40: 'rgba(0, 0, 0, 0.4)',\n  grey20: 'rgba(0, 0, 0, 0.2)',\n  grey10: 'rgba(0, 0, 0, 0.1)',\n  grey5: 'rgba(0, 0, 0, 0.05)',\n  grey1: '#f8f8f8',\n  primary: '#F3AC67',\n  primaryLighten: '#fceee0',\n  success: '#32CD32',\n}\n\nexport const elemSize = {\n  navbarHeight: '75px',\n  navbarLeftWidth: '65%',\n  navbarRightWidth: '35%',\n  progreesWidth: '150px',\n  progressHeight: '5px',\n  todoHeight: '130px',\n}\n\nexport const device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  tabletL: `(max-width: ${size.tabletL})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`,\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { fontSizes, space, palette, elemSize } from '../../../theme'\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  span {\n    font-size: ${fontSizes.xxxxs};\n    margin-right: ${space.sm};\n    color: ${palette.primary};\n    letter-spacing: 1px;\n  }\n`\n\nconst Wrapper = styled.div`\n  display: inline-block;\n  width: ${elemSize.progreesWidth};\n  height: ${elemSize.progressHeight};\n  background: ${palette.primaryLighten};\n`\n\nconst Progress = styled.div`\n  height: inherit;\n  width: ${props => props.width || 0};\n  background: ${palette.primary};\n  transition: width 0.4s ease-in;\n`\n\nconst ProgressBar = props => {\n  const { percent } = props\n  return (\n    <Container>\n      <span>PROGRESS</span>\n      <Wrapper>\n        <Progress data-testid=\"progress-bar\" width={`${percent}%`} />\n      </Wrapper>\n    </Container>\n  )\n}\n\nProgressBar.propTypes = {\n  percent: PropTypes.number,\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { elemSize, space, palette, device, fontSizes } from '../../../theme'\n\nconst Container = styled.div`\n  display: flex;\n  height: 100%;\n  width: ${elemSize.navbarRightWidth};\n  justify-content: center;\n\n  @media ${device.tablet} {\n    width: 100%;\n  }\n`\n\nconst StyledButton = styled.button`\n  margin: 0 ${space.xxs};\n  border: none;\n  outline: none;\n  cursor: pointer;\n  font-size: ${fontSizes.xs};\n  font-weight: bold;\n  letter-spacing: 0.75px;\n  color: ${props => (props.active ? palette.grey90 : palette.grey40)};\n  text-decoration: ${props => (props.active ? 'underline' : 'none')};\n\n  &:hover {\n    color: ${palette.grey90};\n    text-decoration: underline;\n  }\n`\n\nconst StatusTabs = props => {\n  const { active, handleClickMenu } = props\n  return (\n    <Container>\n      <StyledButton\n        data-testid=\"all-menu\"\n        active={active === 'all'}\n        onClick={() => handleClickMenu('all')}\n      >\n        All\n      </StyledButton>\n      <StyledButton\n        data-testid=\"inProgress-menu\"\n        active={active === 'inProgress'}\n        onClick={() => handleClickMenu('inProgress')}\n      >\n        In Progress\n      </StyledButton>\n      <StyledButton\n        data-testid=\"done-menu\"\n        active={active === 'done'}\n        onClick={() => handleClickMenu('done')}\n      >\n        Done\n      </StyledButton>\n    </Container>\n  )\n}\n\nStatusTabs.propTypes = {\n  active: PropTypes.string,\n  handleClickMenu: PropTypes.func,\n}\n\nStatusTabs.defaultProps = {\n  active: 'all',\n}\n\nexport default StatusTabs\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport ProgressBar from './ProgressBar'\nimport StatusTabs from './StatusTabs'\nimport { elemSize, device, fontSizes, palette, space } from '../../theme'\n\nconst Header = styled.header`\n  display: flex;\n  flex-wrap: wrap;\n  box-sizing: border-box;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 999;\n  width: 100%;\n  background: white;\n\n  @media ${device.tablet} {\n    padding-bottom: ${space.lg};\n    border-bottom: 1px solid ${palette.grey1};\n  }\n`\n\nconst LeftWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  box-sizing: border-box;\n  height: 100%;\n  justify-content: space-between;\n  width: ${elemSize.navbarLeftWidth};\n  border-right: 2px solid ${palette.grey1};\n  padding: ${space.xxl} ${space.xxxl};\n\n  a {\n    font-size: ${fontSizes.xl};\n    font-weight: bold;\n    color: ${palette.grey80};\n    text-decoration: none;\n\n    &:hover {\n      opacity: 0.8;\n    }\n  }\n\n  @media ${device.tablet} {\n    border-right: none;\n    width: 100%;\n  }\n`\n\nconst Navbar = props => {\n  const { title, active, handleClickMenu, percent } = props\n  return (\n    <Header>\n      <LeftWrapper>\n        <a href=\".\">{title}</a>\n        <ProgressBar percent={percent} />\n      </LeftWrapper>\n      <StatusTabs active={active} handleClickMenu={handleClickMenu} />\n    </Header>\n  )\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string,\n  percent: PropTypes.number,\n  active: PropTypes.string,\n  handleClickMenu: PropTypes.func,\n}\n\nNavbar.defaultProps = {\n  title: 'to-do list',\n}\n\nexport default Navbar\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { space, fontSizes, palette } from '../../theme'\n\nconst Input = styled.input`\n  width: 100%;\n  padding: ${space.md};\n  font-size: ${fontSizes.md};\n  outline: none;\n  border: none;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  color: ${palette.primary};\n  font-weight: bold;\n\n  ::placeholder {\n    color: ${palette.grey20};\n  }\n`\n\nconst TodoForm = props => {\n  const { handleAddTask } = props\n  const [value, setValue] = useState('')\n\n  const onChange = e => {\n    setValue(e.target.value)\n  }\n\n  const onSubmit = e => {\n    e.preventDefault()\n    if (value) {\n      handleAddTask(value)\n      setValue('')\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit} data-testid=\"todo-form\">\n      <Input\n        data-testid=\"todo-input\"\n        placeholder=\"Add task\"\n        value={value}\n        onChange={onChange}\n        autoFocus\n      />\n    </form>\n  )\n}\n\nTodoForm.propsType = {\n  handleAddTask: PropTypes.func,\n}\n\nexport default TodoForm\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { space, elemSize, palette, fontSizes } from '../../../theme'\n\nconst Container = styled.li`\n  display: flex;\n  margin-bottom: ${space.lg};\n  height: ${elemSize.todoHeight};\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n\n  img {\n    width: 200px;\n  }\n`\n\nconst Body = styled.div`\n  width: 100%;\n  padding: ${space.md};\n\n  button {\n    display: block;\n    border: none;\n    justify-content: center;\n    text-decoration: none;\n    font-weight: 400;\n    padding: 6px 20px;\n    letter-spacing: 1px;\n    border-radius: 2px;\n    color: white;\n    background: red;\n    outline: none;\n    cursor: pointer;\n\n    &:hover {\n      opacity: 0.8;\n    }\n  }\n`\n\nconst TitleInput = styled.input`\n  border: 1px solid ${palette.grey20};\n  outline: none;\n  width: 220px;\n  padding: ${space.xs};\n  font-weight: bold;\n  letter-spacing: 1px;\n  font-size: ${fontSizes.sm};\n\n  &:active,\n  &:focus {\n    border-color: ${palette.primary};\n  }\n`\n\nconst Title = styled.p`\n  width: 220px;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  letter-spacing: 1px;\n  font-weight: bold;\n  margin: 0;\n  border: 1px solid rgba(255, 255, 255, 0);\n  cursor: text;\n\n  &:hover {\n    padding: ${space.xs};\n    border: 1px solid ${palette.grey20};\n  }\n`\n\nconst StatusText = styled.p`\n  font-weight: bold;\n  margin: ${space.xs} 0;\n  font-size: ${fontSizes.sm};\n  color: ${props => props.color};\n`\n\nconst TodoItem = props => {\n  const [showInput, setShowInput] = useState(false)\n\n  const {\n    title,\n    id,\n    isFinished,\n    imgURL,\n    handleRemoveTodo,\n    handleToggleTodo,\n    handleChangeTitle,\n  } = props\n\n  const statusText = isFinished ? 'Done' : 'In Progress'\n\n  const renderTitle = showInput ? (\n    <TitleInput\n      autoFocus\n      data-testid=\"edit-input\"\n      value={title}\n      onBlur={() => setShowInput(false)}\n      onKeyDown={e => (e.key === 'Enter' ? setShowInput(false) : null)}\n      onChange={e => handleChangeTitle(e.target.value, id)}\n    />\n  ) : (\n    <Title onClick={() => setShowInput(true)} data-testid=\"todo-title\">\n      {title}\n    </Title>\n  )\n\n  return (\n    <Container data-testid=\"todo-item\">\n      <img src={imgURL} alt=\"todo-img\" />\n      <Body>\n        {renderTitle}\n        <StatusText color={isFinished ? palette.success : palette.primary}>\n          {statusText}\n        </StatusText>\n\n        <button data-testid=\"remove-btn\" onClick={() => handleRemoveTodo(id)}>\n          Remove\n        </button>\n        <input\n          checked={isFinished}\n          type=\"checkbox\"\n          data-testid=\"checked-btn\"\n          onChange={e => handleToggleTodo(id, e.target.checked)}\n        />\n      </Body>\n    </Container>\n  )\n}\n\nTodoItem.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.string,\n  isFinished: PropTypes.bool,\n  imgURL: PropTypes.string,\n  handleRemoveTodo: PropTypes.func,\n  handleToggleTodo: PropTypes.func,\n  handleChangeTitle: PropTypes.func,\n}\n\nexport default TodoItem\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { space } from '../../theme'\nimport TodoItem from './TodoItem'\n\nconst Container = styled.div`\n  height: calc(100vh - 200px);\n  margin-top: ${space.md};\n  overflow-y: auto;\n  padding: 0 ${space.xs};\n\n  ul {\n    list-style-type: none;\n    padding-inline-start: 0;\n  }\n`\n\nconst TodoList = props => {\n  const { todos, handleRemoveTodo, handleToggleTodo, handleChangeTitle } = props\n\n  const itemList = todos.map(todo => (\n    <TodoItem\n      key={todo.id}\n      title={todo.title}\n      id={todo.id}\n      imgURL={todo.imgURL}\n      handleRemoveTodo={handleRemoveTodo}\n      handleToggleTodo={handleToggleTodo}\n      handleChangeTitle={handleChangeTitle}\n      isFinished={todo.isFinished}\n    />\n  ))\n\n  return (\n    <Container data-testid=\"todo-list\">\n      {todos.length > 0 ? <ul>{itemList}</ul> : <>Empty</>}\n    </Container>\n  )\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object),\n}\n\nTodoList.defaultProps = {\n  todos: [],\n  handleRemoveTodo: PropTypes.func,\n  handleToggleTodo: PropTypes.func,\n  handleChangeTitle: PropTypes.func,\n}\n\nexport default TodoList\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { device, fontSizes, palette, space } from '../../theme'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: ${space.xxxl};\n  flex: 0.5;\n\n  h1 {\n    font-size: ${fontSizes.xxxl};\n    font-weight: 400;\n    letter-spacing: 2px;\n    margin: ${space.xs} 0;\n  }\n\n  span {\n    color: ${palette.primary};\n    text-decoration: underline;\n  }\n\n  @media ${device.tablet} {\n    padding-top: ${space.xl};\n    flex: unset;\n    margin-bottom: ${space.lg};\n\n    h1 {\n      font-size: ${fontSizes.xxl};\n    }\n  }\n`\n\nconst GreetingBlock = props => {\n  const { remainingTodos } = props\n\n  return (\n    <Container>\n      <h1>Hello welcome back.</h1>\n      <h1>\n        You have <span>{remainingTodos}</span>\n      </h1>\n      <h1>remaining tasks</h1>\n      <h1>to complete.</h1>\n    </Container>\n  )\n}\n\nGreetingBlock.propTypes = {\n  remainingTodos: PropTypes.number,\n}\n\nGreetingBlock.defaultProps = {\n  remainingTodos: 0,\n}\n\nexport default GreetingBlock\n","import image1 from '../assets/images/1.jpg'\nimport image2 from '../assets/images/2.jpg'\nimport image3 from '../assets/images/3.jpg'\nimport image4 from '../assets/images/4.jpg'\n\nexport const images = [image1, image2, image3, image4]\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport Navbar from './Navbar'\nimport TodoForm from './TodoForm'\nimport TodoList from './TodoList'\nimport GreetingBlock from './GreetingBlock'\nimport { space, device } from '../theme'\n\nimport { images } from '../constants'\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  padding: 0 ${space.xxxl};\n\n  @media ${device.tablet} {\n    flex-direction: column;\n  }\n`\n\nconst Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 0.5;\n\n  @media ${device.tablet} {\n    flex: 1;\n  }\n`\n\nfunction getFilteredTodo(todos, currentMenu) {\n  if (currentMenu === 'done') {\n    return todos.filter(todo => todo.isFinished === true)\n  }\n  if (currentMenu === 'inProgress') {\n    return todos.filter(todo => todo.isFinished === false)\n  }\n\n  return todos\n}\n\nexport function getProgressPercentage(todos = []) {\n  if (todos.length < 1) return 0\n\n  const finishedAmount = todos.reduce((sum, todo) => todo.isFinished ? (sum = sum += 1) : sum, 0) // prettier-ignore\n\n  return (finishedAmount / todos.length) * 100\n}\n\nfunction TodoApp(props) {\n  const { defaultTodos } = props\n  const [todos, setTodos] = useState(defaultTodos)\n  const [currentMenu, setCurrentMenu] = useState('all')\n\n  const handleAddTask = value => {\n    const imageNum = Math.floor(Math.random() * 4)\n    setTodos(prevTodos =>\n      setTodos([\n        ...prevTodos,\n        {\n          id: `${Math.random(1)}-${value}`,\n          title: value,\n          isFinished: false,\n          imgURL: images[imageNum],\n        },\n      ])\n    )\n  }\n\n  const handleRemoveTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  const handleToggleTodo = (id, checked) => {\n    setTodos(prevTodos =>\n      prevTodos.map(todo =>\n        todo.id === id ? { ...todo, isFinished: checked } : todo\n      )\n    )\n  }\n\n  const handleClickMenu = value => {\n    setCurrentMenu(value)\n  }\n\n  const handleChangeTitle = (value, id) => {\n    setTodos(prevTodos =>\n      prevTodos.map(todo => (todo.id === id ? { ...todo, title: value } : todo))\n    )\n  }\n\n  const filterTodos = getFilteredTodo(todos, currentMenu)\n  const percent = getProgressPercentage(todos)\n  const remainingTodos = todos.reduce((sum, todo) => !todo.isFinished ? (sum = sum += 1) : sum, 0) // prettier-ignore\n\n  return (\n    <>\n      <Navbar\n        active={currentMenu}\n        handleClickMenu={handleClickMenu}\n        percent={percent}\n      />\n      <BodyWrapper>\n        <GreetingBlock remainingTodos={remainingTodos} />\n        <Box>\n          <TodoForm handleAddTask={handleAddTask} />\n          <TodoList\n            todos={filterTodos}\n            handleRemoveTodo={handleRemoveTodo}\n            handleToggleTodo={handleToggleTodo}\n            handleChangeTitle={handleChangeTitle}\n          />\n        </Box>\n      </BodyWrapper>\n    </>\n  )\n}\n\nTodoApp.propTypes = {\n  defaultTodos: PropTypes.arrayOf(Object),\n}\n\nTodoApp.defaultProps = {\n  defaultTodos: [],\n}\n\nexport default TodoApp\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport TodoApp from './TodoApp'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<TodoApp />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}