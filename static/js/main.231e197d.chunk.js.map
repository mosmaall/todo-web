{"version":3,"sources":["theme/index.js","TodoApp/Navbar/ProgressBar/index.js","TodoApp/Navbar/StatusTabs/index.js","TodoApp/Navbar/index.js","TodoApp/TodoForm/index.js","TodoApp/TodoList/TodoItem/index.js","TodoApp/TodoList/index.js","TodoApp/GreetingBlock/index.js","TodoApp/index.js","serviceWorker.js","index.js"],"names":["size","space","fontSizes","palette","elemSize","device","mobileS","concat","mobileM","mobileL","tablet","tabletL","laptop","laptopL","desktop","desktopL","Container","styled","div","_templateObject","Wrapper","_templateObject2","Progress","_templateObject3","props","width","ProgressBar","percent","react_default","a","createElement","data-testid","StatusTabs_templateObject","StyledButton","button","StatusTabs_templateObject2","active","StatusTabs","handleClickMenu","StatusTabs_Container","onClick","defaultProps","Header","header","Navbar_templateObject","Navbar_templateObject2","LeftWrapper","Navbar_templateObject3","Navbar","title","Navbar_Wrapper","href","Navbar_ProgressBar","Navbar_StatusTabs","Input","input","TodoForm_templateObject","TodoForm","handleAddTask","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onSubmit","e","preventDefault","placeholder","onChange","target","propsType","PropTypes","func","TodoItem","showInput","setShowInput","id","isFinished","handleRemoveTodo","handleToggleTodo","handleChangeTitle","statusText","onBlur","onKeyDown","key","autoFocus","checked","type","TodoList_templateObject","TodoList","todos","itemList","map","todo","TodoList_TodoItem","TodoList_Container","length","Fragment","GreetingBlock","remainingTodos","BodyWrapper","TodoApp_templateObject","TodoApp","defaultTodos","setTodos","_useState3","_useState4","currentMenu","setCurrentMenu","filterTodos","filter","getFilteredTodo","arguments","undefined","reduce","sum","getProgressPercentage","TodoApp_Navbar","TodoApp_GreetingBlock","TodoApp_TodoForm","prevTodos","toConsumableArray","Math","random","TodoApp_TodoList","objectSpread","Boolean","window","location","hostname","match","ReactDOM","render","src_TodoApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.231e197d.chunk.js","sourcesContent":["const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  tabletL: '900px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n}\n\nexport const space = {\n  xxxs: '1px',\n  xxs: '2px',\n  xs: '5px',\n  sm: '10px',\n  md: '15px',\n  lg: '20px',\n  xl: '25px',\n  xxl: '30px',\n  xxxl: '50px',\n}\n\nexport const fontSizes = {\n  xxxxs: '0.625rem', // 10 px\n  xxxs: '0.75rem', // 12 px\n  xxs: '0.8125rem', // 13 px\n  xs: '0.875rem', // 14 px\n  sm: '0.9375rem', // 15 px\n  md: '1rem', // 16 px\n  lg: '1.125rem', // 18 px\n  xl: '1.25rem', // 20 px\n  xxl: '1.5rem', // 24 px\n  xxxl: '2.25rem', // 36 px\n}\n\nexport const palette = {\n  grey90: 'rgba(0, 0, 0, 0.9)',\n  grey80: 'rgba(0, 0, 0, 0.8)',\n  grey50: 'rgba(0, 0, 0, 0.5)',\n  grey40: 'rgba(0, 0, 0, 0.4)',\n  grey20: 'rgba(0, 0, 0, 0.2)',\n  grey10: 'rgba(0, 0, 0, 0.1)',\n  grey5: 'rgba(0, 0, 0, 0.05)',\n  primary: '#F3AC67',\n  primaryLighten: '#fceee0',\n}\n\nexport const elemSize = {\n  navbarHeight: '75px',\n  navbarLeftWidth: '65%',\n  navbarRightWidth: '35%',\n  progreesWidth: '150px',\n  progressHeight: '5px',\n}\n\nexport const device = {\n  mobileS: `(max-width: ${size.mobileS})`,\n  mobileM: `(max-width: ${size.mobileM})`,\n  mobileL: `(max-width: ${size.mobileL})`,\n  tablet: `(max-width: ${size.tablet})`,\n  tabletL: `(max-width: ${size.tabletL})`,\n  laptop: `(max-width: ${size.laptop})`,\n  laptopL: `(max-width: ${size.laptopL})`,\n  desktop: `(max-width: ${size.desktop})`,\n  desktopL: `(max-width: ${size.desktop})`,\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { fontSizes, space, palette, elemSize } from '../../../theme'\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  span {\n    font-size: ${fontSizes.xxxxs};\n    margin-right: ${space.sm};\n    color: ${palette.primary};\n    letter-spacing: 1px;\n  }\n`\n\nconst Wrapper = styled.div`\n  display: inline-block;\n  width: ${elemSize.progreesWidth};\n  height: ${elemSize.progressHeight};\n  background: ${palette.primaryLighten};\n`\n\nconst Progress = styled.div`\n  height: inherit;\n  width: ${props => props.width || 0};\n  background: ${palette.primary};\n  transition: width 0.4s ease-in;\n`\n\nconst ProgressBar = props => {\n  const { percent } = props\n  return (\n    <Container>\n      <span>PROGRESS</span>\n      <Wrapper>\n        <Progress data-testid=\"progress-bar\" width={`${percent}%`} />\n      </Wrapper>\n    </Container>\n  )\n}\n\nProgressBar.propTypes = {\n  percent: PropTypes.number,\n}\n\nexport default ProgressBar\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { elemSize, space, palette, device, fontSizes } from '../../../theme'\n\nconst Container = styled.div`\n  display: flex;\n  height: 100%;\n  width: ${elemSize.navbarRightWidth};\n  justify-content: center;\n\n  @media ${device.tablet} {\n    width: 100%;\n  }\n`\n\nconst StyledButton = styled.button`\n  margin: 0 ${space.xxs};\n  border: none;\n  outline: none;\n  cursor: pointer;\n  font-size: ${fontSizes.xs};\n  font-weight: bold;\n  letter-spacing: 0.75px;\n  color: ${props => (props.active ? palette.grey90 : palette.grey40)};\n  text-decoration: ${props => (props.active ? 'underline' : 'none')};\n\n  &:hover {\n    color: ${palette.grey90};\n    text-decoration: underline;\n  }\n`\n\nconst StatusTabs = props => {\n  const { active, handleClickMenu } = props\n  return (\n    <Container>\n      <StyledButton\n        data-testid=\"all-menu\"\n        active={active === 'all'}\n        onClick={() => handleClickMenu('all')}\n      >\n        All\n      </StyledButton>\n      <StyledButton\n        data-testid=\"inProgress-menu\"\n        active={active === 'inProgress'}\n        onClick={() => handleClickMenu('inProgress')}\n      >\n        In Progress\n      </StyledButton>\n      <StyledButton\n        data-testid=\"done-menu\"\n        active={active === 'done'}\n        onClick={() => handleClickMenu('done')}\n      >\n        Done\n      </StyledButton>\n    </Container>\n  )\n}\n\nStatusTabs.propTypes = {\n  active: PropTypes.string,\n  handleClickMenu: PropTypes.func,\n}\n\nStatusTabs.defaultProps = {\n  active: 'all',\n}\n\nexport default StatusTabs\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport ProgressBar from './ProgressBar'\nimport StatusTabs from './StatusTabs'\nimport { elemSize, device, fontSizes, palette, space } from '../../theme'\n\nconst Header = styled.header`\n  z-index: 999;\n  width: 100%;\n  height: ${elemSize.navbarHeight};\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  box-sizing: border-box;\n  justify-content: space-between;\n  align-items: center;\n  height: inherit;\n  background: white;\n\n  @media ${device.tablet} {\n    flex-direction: column;\n    justify-content: flex-end;\n    padding-bottom: 0;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  height: 100%;\n  justify-content: space-between;\n  width: ${elemSize.navbarLeftWidth};\n  border-right: 2px solid #f8f8f8;\n  padding: 0 ${space.xxl};\n\n  a {\n    font-size: ${fontSizes.xl};\n    font-weight: bold;\n    color: ${palette.grey80};\n    text-decoration: none;\n\n    &:hover {\n      opacity: 0.8;\n    }\n  }\n\n  @media ${device.tablet} {\n    border-right: none;\n  }\n`\n\nconst Navbar = props => {\n  const { title, active, handleClickMenu, percent } = props\n  return (\n    <Header>\n      <Wrapper>\n        <LeftWrapper>\n          <a href=\".\">{title}</a>\n          <ProgressBar percent={percent} />\n        </LeftWrapper>\n        <StatusTabs active={active} handleClickMenu={handleClickMenu} />\n      </Wrapper>\n    </Header>\n  )\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string,\n  percent: PropTypes.number,\n  active: PropTypes.string,\n  handleClickMenu: PropTypes.func,\n}\n\nNavbar.defaultProps = {\n  title: 'to-do list',\n}\n\nexport default Navbar\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { space, fontSizes, palette } from '../../theme'\n\nconst Input = styled.input`\n  width: 100%;\n  padding: ${space.md};\n  font-size: ${fontSizes.md};\n  outline: none;\n  border: none;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  color: ${palette.primary};\n  font-weight: bold;\n\n  ::placeholder {\n    color: ${palette.grey20};\n  }\n`\n\nconst TodoForm = props => {\n  const { handleAddTask } = props\n  const [value, setValue] = useState('')\n\n  const onChange = e => {\n    setValue(e.target.value)\n  }\n\n  const onSubmit = e => {\n    e.preventDefault()\n    if (value) {\n      handleAddTask(value)\n      setValue('')\n    }\n  }\n\n  return (\n    <form onSubmit={onSubmit} data-testid=\"todo-form\">\n      <Input\n        data-testid=\"todo-input\"\n        placeholder=\"Add task\"\n        value={value}\n        onChange={onChange}\n      />\n    </form>\n  )\n}\n\nTodoForm.propsType = {\n  handleAddTask: PropTypes.func,\n}\n\nexport default TodoForm\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst TodoItem = props => {\n  const [showInput, setShowInput] = useState(false)\n  const {\n    title,\n    id,\n    isFinished,\n    handleRemoveTodo,\n    handleToggleTodo,\n    handleChangeTitle,\n  } = props\n\n  const statusText = isFinished ? 'Done' : 'In Progress'\n\n  return (\n    <li data-testid=\"todo-item\">\n      {showInput ? (\n        <input\n          value={title}\n          data-testid=\"edit-input\"\n          onBlur={() => setShowInput(false)}\n          onKeyDown={e => (e.key === 'Enter' ? setShowInput(false) : null)}\n          onChange={e => handleChangeTitle(e.target.value, id)}\n          autoFocus\n        />\n      ) : (\n        <span onClick={() => setShowInput(true)}>{title}</span>\n      )}\n\n      <p>{statusText}</p>\n      <input\n        checked={isFinished}\n        type=\"checkbox\"\n        data-testid=\"checked-btn\"\n        onChange={e => handleToggleTodo(id, e.target.checked)}\n      />\n      <button data-testid=\"remove-btn\" onClick={() => handleRemoveTodo(id)}>\n        Remove\n      </button>\n    </li>\n  )\n}\n\nTodoItem.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.string,\n  isFinished: PropTypes.bool,\n  handleRemoveTodo: PropTypes.func,\n  handleToggleTodo: PropTypes.func,\n  handleChangeTitle: PropTypes.func,\n}\n\nexport default TodoItem\n","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { space } from '../../theme'\nimport TodoItem from './TodoItem'\n\nconst Container = styled.div`\n  margin-top: ${space.md};\n\n  ul {\n    list-style-type: none;\n    padding-inline-start: 0;\n\n    li {\n      margin-bottom: ${space.md};\n      padding: ${space.md};\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    }\n  }\n`\n\nconst TodoList = props => {\n  const { todos, handleRemoveTodo, handleToggleTodo, handleChangeTitle } = props\n\n  const itemList = todos.map(todo => (\n    <TodoItem\n      key={todo.id}\n      title={todo.title}\n      id={todo.id}\n      handleRemoveTodo={handleRemoveTodo}\n      handleToggleTodo={handleToggleTodo}\n      handleChangeTitle={handleChangeTitle}\n      isFinished={todo.isFinished}\n    />\n  ))\n\n  return (\n    <Container data-testid=\"todo-list\">\n      {todos.length > 0 ? <ul>{itemList}</ul> : <>Empty</>}\n    </Container>\n  )\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object),\n}\n\nTodoList.defaultProps = {\n  todos: [],\n  handleRemoveTodo: PropTypes.func,\n  handleToggleTodo: PropTypes.func,\n  handleChangeTitle: PropTypes.func,\n}\n\nexport default TodoList\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst GreetingBlock = props => {\n  const { remainingTodos } = props\n\n  return <div>{remainingTodos} tasks to complete.</div>\n}\n\nGreetingBlock.propTypes = {\n  remainingTodos: PropTypes.number,\n}\n\nGreetingBlock.defaultProps = {\n  remainingTodos: 0,\n}\n\nexport default GreetingBlock\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nimport Navbar from './Navbar'\nimport TodoForm from './TodoForm'\nimport TodoList from './TodoList'\nimport GreetingBlock from './GreetingBlock'\nimport { space, elemSize } from '../theme'\n\nconst BodyWrapper = styled.div`\n  padding: ${space.xxl};\n  height: calc(100% - ${elemSize.navbarHeight});\n`\n\nfunction getFilteredTodo(todos, currentMenu) {\n  if (currentMenu === 'done') {\n    return todos.filter(todo => todo.isFinished === true)\n  }\n  if (currentMenu === 'inProgress') {\n    return todos.filter(todo => todo.isFinished === false)\n  }\n\n  return todos\n}\n\nexport function getProgressPercentage(todos = []) {\n  if (todos.length < 1) return 0\n\n  const finishedAmount = todos.reduce((sum, todo) => todo.isFinished ? (sum = sum += 1) : sum, 0) // prettier-ignore\n\n  return (finishedAmount / todos.length) * 100\n}\n\nfunction TodoApp(props) {\n  const { defaultTodos } = props\n  const [todos, setTodos] = useState(defaultTodos)\n  const [currentMenu, setCurrentMenu] = useState('all')\n\n  const handleAddTask = value => {\n    setTodos(prevTodos =>\n      setTodos([\n        ...prevTodos,\n        { id: `${Math.random(1)}-${value}`, title: value, isFinished: false },\n      ])\n    )\n  }\n\n  const handleRemoveTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  const handleToggleTodo = (id, checked) => {\n    setTodos(prevTodos =>\n      prevTodos.map(todo =>\n        todo.id === id ? { ...todo, isFinished: checked } : todo\n      )\n    )\n  }\n\n  const handleClickMenu = value => {\n    setCurrentMenu(value)\n  }\n\n  const handleChangeTitle = (value, id) => {\n    setTodos(prevTodos =>\n      prevTodos.map(todo => (todo.id === id ? { ...todo, title: value } : todo))\n    )\n  }\n\n  const filterTodos = getFilteredTodo(todos, currentMenu)\n  const percent = getProgressPercentage(todos)\n  const remainingTodos = todos.reduce((sum, todo) => !todo.isFinished ? (sum = sum += 1) : sum, 0) // prettier-ignore\n\n  return (\n    <div>\n      <Navbar\n        active={currentMenu}\n        handleClickMenu={handleClickMenu}\n        percent={percent}\n      />\n      <BodyWrapper>\n        <GreetingBlock remainingTodos={remainingTodos} />\n        <TodoForm handleAddTask={handleAddTask} />\n        <TodoList\n          todos={filterTodos}\n          handleRemoveTodo={handleRemoveTodo}\n          handleToggleTodo={handleToggleTodo}\n          handleChangeTitle={handleChangeTitle}\n        />\n      </BodyWrapper>\n    </div>\n  )\n}\n\nTodoApp.propTypes = {\n  defaultTodos: PropTypes.arrayOf(Object),\n}\n\nTodoApp.defaultProps = {\n  defaultTodos: [],\n}\n\nexport default TodoApp\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport TodoApp from './TodoApp'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<TodoApp />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}